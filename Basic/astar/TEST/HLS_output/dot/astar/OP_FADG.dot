digraph G {
0[color=blue,shape=Msquare,label="ENTRY - ENTRY"];
1[color=blue,shape=Msquare,label="EXIT - EXIT"];
2[color=burlywood,shape=box,label="astar_28877_29404 - addr_expr\n_8282 = (&(i));\n\nsource code variables:\ni(28861)\n_8282(29403)\nSCALARS:\nDEFS:\n_8282(29403)\n"];
3[color=red,shape=box,label="astar_28877_29267 - STORE\nif(1u) (*((TARGET_INDEX*)(_8282))) = 2u;\n\nsource code variables:\n_8282(29403)\nSCALARS:\nUSES:\n_8282(29403)\nVIRTUAL:\nUSES:\n_MEM_8238(29276)\nDEFS:\n_MEM_8239(29277)\n"];
4[color=burlywood,shape=box,label="astar_28877_29517 - addr_expr\n_8310 = a2;\n\nsource code variables:\na2(28868)\n_8310(29516)\nSCALARS:\nDEFS:\n_8310(29516)\n"];
5[color=burlywood,shape=box,label="astar_28877_29473 - nop_expr\n_8299 = (char(*)[2]) (_8310);\n\nsource code variables:\n_8299(29472)\n_8310(29516)\nSCALARS:\nUSES:\n_8310(29516)\nDEFS:\n_8299(29472)\n"];
6[color=burlywood,shape=box,label="astar_28877_29411 - nop_expr\n_8283 = (char*) (_8299);\n\nsource code variables:\n_8283(29410)\n_8299(29472)\nSCALARS:\nUSES:\n_8299(29472)\nDEFS:\n_8283(29410)\n"];
7[color=red,shape=box,label="astar_28877_29268 - STORE\nif(1u) (*((char*)(_8283))) = 0;\n\nsource code variables:\n_8283(29410)\nSCALARS:\nUSES:\n_8283(29410)\nVIRTUAL:\nDEFS:\n_MEM_8240(29280)\n"];
8[color=burlywood,shape=box,label="astar_28877_29501 - pointer_plus_expr\n_8307 = (char(*)[2])(((unsigned char*)_8299) + 2);\n\nsource code variables:\n_8299(29472)\n_8307(29500)\nSCALARS:\nUSES:\n_8299(29472)\nDEFS:\n_8307(29500)\n"];
9[color=burlywood,shape=box,label="astar_28877_29426 - nop_expr\n_8287 = (char*) (_8307);\n\nsource code variables:\n_8287(29425)\n_8307(29500)\nSCALARS:\nUSES:\n_8307(29500)\nDEFS:\n_8287(29425)\n"];
10[color=burlywood,shape=box,label="astar_28877_29435 - pointer_plus_expr\n_8290 = _8287 + 1;\n\nsource code variables:\n_8287(29425)\n_8290(29434)\nSCALARS:\nUSES:\n_8287(29425)\nDEFS:\n_8290(29434)\n"];
11[color=red,shape=box,label="astar_28877_29269 - STORE\nif(1u) (*((char*)(_8290))) = 127;\n\nsource code variables:\n_8290(29434)\nSCALARS:\nUSES:\n_8290(29434)\nVIRTUAL:\nDEFS:\n_MEM_8241(29283)\n"];
12[color=burlywood,shape=box,label="astar_28877_29511 - addr_expr\n_8309 = frontier;\n\nsource code variables:\nfrontier(28867)\n_8309(29510)\nSCALARS:\nDEFS:\n_8309(29510)\n"];
13[color=burlywood,shape=box,label="astar_28877_29441 - nop_expr\n_8291 = (TARGET_TYPE*) (_8309);\n\nsource code variables:\n_8291(29440)\n_8309(29510)\nSCALARS:\nUSES:\n_8309(29510)\nDEFS:\n_8291(29440)\n"];
14[color=red,shape=box,label="astar_28877_29270 - STORE\nif(1u) (*((TARGET_TYPE*)(_8291))) = 0u;\n\nsource code variables:\n_8291(29440)\nSCALARS:\nUSES:\n_8291(29440)\nVIRTUAL:\nDEFS:\n_MEM_8242(29286)\n"];
15[color=burlywood,shape=box,label="astar_28877_29455 - addr_expr\n_8295 = (&(frontier_size));\n\nsource code variables:\nfrontier_size(28866)\n_8295(29454)\nSCALARS:\nDEFS:\n_8295(29454)\n"];
16[color=green,shape=box,label="astar_28877_29271 - LOAD\nif(1u) _8244 = (*((TARGET_TYPE*)(_8295)));\n\nsource code variables:\n_8244(29287)\n_8295(29454)\nSCALARS:\nUSES:\n_8295(29454)\nDEFS:\n_8244(29287)\nVIRTUAL:\nUSES:\n_MEM_8243(29288)\n_MEM_8399(29844)\n"];
17[color=burlywood,shape=box,label="astar_28877_29272 - plus_expr\n_8245 = (unsigned char)(_8244 + (1u));\n\nsource code variables:\n_8244(29287)\n_8245(29289)\nSCALARS:\nUSES:\n_8244(29287)\nDEFS:\n_8245(29289)\n"];
18[color=red,shape=box,label="astar_28877_29273 - STORE\nif(1u) (*((TARGET_TYPE*)(_8295))) = _8245;\n\nsource code variables:\n_8245(29289)\n_8295(29454)\nSCALARS:\nUSES:\n_8245(29289)\n_8295(29454)\nVIRTUAL:\nDEFS:\n_MEM_8243(29288)\n"];
19[color=burlywood,shape=box,label="astar_28877_29463 - addr_expr\n_8297 = (&(current));\n\nsource code variables:\ncurrent(28864)\n_8297(29462)\nSCALARS:\nDEFS:\n_8297(29462)\n"];
20[color=green,shape=box,label="astar_28877_29274 - LOAD\nif(1u) current_lsm_77_8246 = (*((TARGET_INDEX*)(_8297)));\n\nsource code variables:\ncurrent_lsm_77_8246(29291)\n_8297(29462)\nSCALARS:\nUSES:\n_8297(29462)\nDEFS:\ncurrent_lsm_77_8246(29291)\n"];
21[color=green,shape=box,label="astar_28877_29275 - LOAD\nif(1u) i_lsm_76_8247 = (*((TARGET_INDEX*)(_8282)));\n\nsource code variables:\ni_lsm_76_8247(29294)\n_8282(29403)\nSCALARS:\nUSES:\n_8282(29403)\nDEFS:\ni_lsm_76_8247(29294)\nVIRTUAL:\nUSES:\n_MEM_8239(29277)\n"];
22[color=burlywood,shape=box,label="astar_28877_29549 - pointer_plus_expr\n_8319 = _8291 + 1;\n\nsource code variables:\n_8291(29440)\n_8319(29548)\nSCALARS:\nUSES:\n_8291(29440)\nDEFS:\n_8319(29548)\n"];
23[label="astar_28877_29342 - gimple_phi\n/* _8273 = gimple_phi(<_8245, BB2>, <_8260, BB3>) */\n\nsource code variables:\n_8245(29289)\n_8260(29338)\n_8273(29341)\nSCALARS:\nUSES:\n_8245(29289)\n_8260(29338)\nDEFS:\n_8273(29341)\n"];
24[color=green,shape=box,label="astar_28877_29297 - LOAD\nif(1u) min_8250 = (*((TARGET_TYPE*)(_8291)));\n\nsource code variables:\nmin_8250(29311)\n_8291(29440)\nSCALARS:\nUSES:\n_8291(29440)\nDEFS:\nmin_8250(29311)\nVIRTUAL:\nUSES:\n_MEM_8242(29286)\n_MEM_8249(29314)\n_MEM_8401(29847)\n"];
25[color=burlywood,shape=box,label="astar_28877_29298 - nop_expr\n_8251 = (char) (min_8250);\n\nsource code variables:\nmin_8250(29311)\n_8251(29317)\nSCALARS:\nUSES:\nmin_8250(29311)\nDEFS:\n_8251(29317)\n"];
26[color=burlywood,shape=box,label="astar_28877_29299 - gt_expr\n_8252 = _8251 > (0);\n\nsource code variables:\n_8251(29317)\n_8252(29319)\nSCALARS:\nUSES:\n_8251(29317)\nDEFS:\n_8252(29319)\n"];
27[color=burlywood,shape=box,label="astar_28877_29300 - cond_expr\nmin_8253 = _8252 ? min_8250 : 127u;\n\nsource code variables:\nmin_8250(29311)\n_8252(29319)\nmin_8253(29322)\nSCALARS:\nUSES:\nmin_8250(29311)\n_8252(29319)\nDEFS:\nmin_8253(29322)\n"];
28[color=burlywood,shape=box,label="astar_28877_29301 - cond_expr\ncurrent_lsm_77_8254 = _8252 ? 0u : current_lsm_77_8275;\n\nsource code variables:\n_8252(29319)\ncurrent_lsm_77_8254(29324)\ncurrent_lsm_77_8275(29326)\nSCALARS:\nUSES:\n_8252(29319)\ncurrent_lsm_77_8275(29326)\nDEFS:\ncurrent_lsm_77_8254(29324)\n"];
29[color=green,shape=box,label="astar_28877_29302 - LOAD\nif(1u) min_8255 = (*((TARGET_TYPE*)(_8319)));\n\nsource code variables:\nmin_8255(29329)\n_8319(29548)\nSCALARS:\nUSES:\n_8319(29548)\nDEFS:\nmin_8255(29329)\nVIRTUAL:\nUSES:\n_MEM_8249(29314)\n_MEM_8401(29847)\n"];
30[color=burlywood,shape=box,label="astar_28877_29303 - ne_expr\n_8256 = min_8255 != (0u);\n\nsource code variables:\nmin_8255(29329)\n_8256(29331)\nSCALARS:\nUSES:\nmin_8255(29329)\nDEFS:\n_8256(29331)\n"];
31[color=burlywood,shape=box,label="astar_28877_29304 - ge_expr\n_8257 = min_8253 >= min_8255;\n\nsource code variables:\nmin_8253(29322)\nmin_8255(29329)\n_8257(29333)\nSCALARS:\nUSES:\nmin_8253(29322)\nmin_8255(29329)\nDEFS:\n_8257(29333)\n"];
32[color=burlywood,shape=box,label="astar_28877_29305 - bit_and_expr\n_8258 = _8257 & _8256;\n\nsource code variables:\n_8256(29331)\n_8257(29333)\n_8258(29335)\nSCALARS:\nUSES:\n_8256(29331)\n_8257(29333)\nDEFS:\n_8258(29335)\n"];
33[color=burlywood,shape=box,label="astar_28877_29306 - cond_expr\ncurrent_lsm_77_8259 = _8258 ? 1u : current_lsm_77_8254;\n\nsource code variables:\ncurrent_lsm_77_8254(29324)\ncurrent_lsm_77_8259(29328)\n_8258(29335)\nSCALARS:\nUSES:\ncurrent_lsm_77_8254(29324)\n_8258(29335)\nDEFS:\ncurrent_lsm_77_8259(29328)\n"];
34[color=burlywood,shape=box,label="astar_28877_29308 - nop_expr\n_8261 = (int) (current_lsm_77_8259);\n\nsource code variables:\ncurrent_lsm_77_8259(29328)\n_8261(29343)\nSCALARS:\nUSES:\ncurrent_lsm_77_8259(29328)\nDEFS:\n_8261(29343)\n"];
35[color=burlywood,shape=box,label="astar_28877_29556 - nop_expr\n_8321 = (unsigned long) (_8261);\n\nsource code variables:\n_8261(29343)\n_8321(29555)\nSCALARS:\nUSES:\n_8261(29343)\nDEFS:\n_8321(29555)\n"];
36[color=burlywood,shape=box,label="astar_28877_29562 - pointer_plus_expr\n_8323 = _8291 + _8321;\n\nsource code variables:\n_8291(29440)\n_8321(29555)\n_8323(29561)\nSCALARS:\nUSES:\n_8291(29440)\n_8321(29555)\nDEFS:\n_8323(29561)\n"];
37[color=red,shape=box,label="astar_28877_29309 - STORE\nif(1u) (*((TARGET_TYPE*)(_8323))) = 0u;\n\nsource code variables:\n_8323(29561)\nSCALARS:\nUSES:\n_8323(29561)\nVIRTUAL:\nUSES:\n_MEM_8262(29346)\n_MEM_8263(29347)\n_MEM_8264(29348)\n_MEM_8402(29850)\n_MEM_8403(29852)\n_MEM_8404(29854)\nDEFS:\n_MEM_8249(29314)\nOVERS:\n_MEM_8242(29286)\n"];
38[color=burlywood,shape=box,label="astar_28877_29706 - eq_expr\n_8362 = goal == current_lsm_77_8259;\n\nsource code variables:\ncurrent_lsm_77_8259(29328)\ngoal(29376)\n_8362(29705)\nSCALARS:\nUSES:\ncurrent_lsm_77_8259(29328)\ngoal(29376)\nDEFS:\n_8362(29705)\n"];
39[color=red,shape=diamond,label="astar_28877_29310 - READ_COND\nif (_8362)\n\nsource code variables:\n_8362(29705)\nSCALARS:\nUSES:\n_8362(29705)\n"];
40[color=red,shape=box,label="astar_28877_29354 - STORE\nif(1u) (*((TARGET_INDEX*)(_8282))) = 2u;\n\nsource code variables:\n_8282(29403)\nSCALARS:\nUSES:\n_8282(29403)\nVIRTUAL:\nDEFS:\n_MEM_8267(29351)\nOVERS:\n_MEM_8239(29277)\n"];
41[color=red,shape=box,label="astar_28877_29355 - STORE\nif(1u) (*((TARGET_INDEX*)(_8297))) = current_lsm_77_8259;\n\nsource code variables:\ncurrent_lsm_77_8259(29328)\n_8297(29462)\nSCALARS:\nUSES:\ncurrent_lsm_77_8259(29328)\n_8297(29462)\nVIRTUAL:\nDEFS:\n_MEM_8268(29352)\n"];
42[color=red,shape=box,label="astar_28877_29358 - STORE\nif(1u) (*((TARGET_TYPE*)(_8295))) = _8260;\n\nsource code variables:\n_8260(29338)\n_8295(29454)\nSCALARS:\nUSES:\n_8260(29338)\n_8295(29454)\nVIRTUAL:\nDEFS:\n_MEM_8269(29353)\nOVERS:\n_MEM_8243(29288)\n"];
43[label="astar_28877_29830 - gimple_return\nreturn ;\n\n"];
44[label="astar_28877_29366 - gimple_phi\n/* i_lsm_76_8274 = gimple_phi(<i_lsm_76_8247, BB2>, <size, BB3>) */\n\nsource code variables:\ni_lsm_76_8247(29294)\ni_lsm_76_8274(29365)\nsize(29369)\nSCALARS:\nUSES:\ni_lsm_76_8247(29294)\nsize(29369)\nDEFS:\ni_lsm_76_8274(29365)\n"];
45[label="astar_28877_29327 - gimple_phi\n/* current_lsm_77_8275 = gimple_phi(<current_lsm_77_8246, BB2>, <current_lsm_77_8259, BB3>) */\n\nsource code variables:\ncurrent_lsm_77_8246(29291)\ncurrent_lsm_77_8275(29326)\ncurrent_lsm_77_8259(29328)\nSCALARS:\nUSES:\ncurrent_lsm_77_8246(29291)\ncurrent_lsm_77_8259(29328)\nDEFS:\ncurrent_lsm_77_8275(29326)\n"];
46[label="astar_28877_29848 - gimple_phi\n/* _MEM_8401 = gimple_phi(<_MEM_8400, BB2>, <_MEM_8249, BB3>) */\n\nVIRTUAL:\nUSES:\n_MEM_8249(29314)\n_MEM_8400(29846)\nDEFS:\n_MEM_8401(29847)\n"];
47[color=burlywood,shape=box,label="astar_28877_29708 - ne_expr\n_8363 = _8273 != (0u);\n\nsource code variables:\n_8273(29341)\n_8363(29707)\nSCALARS:\nUSES:\n_8273(29341)\nDEFS:\n_8363(29707)\n"];
48[color=burlywood,shape=box,label="astar_28877_29307 - plus_expr\n_8260 = (unsigned char)(_8273 + (255u));\n\nsource code variables:\n_8260(29338)\n_8273(29341)\nSCALARS:\nUSES:\n_8273(29341)\nDEFS:\n_8260(29338)\n"];
49[color=red,shape=diamond,label="astar_28877_29381 - READ_COND\nif (_8363)\n\nsource code variables:\n_8363(29707)\nSCALARS:\nUSES:\n_8363(29707)\n"];
50[color=red,shape=box,label="astar_28877_29349 - STORE\nif(1u) (*((TARGET_INDEX*)(_8282))) = i_lsm_76_8274;\n\nsource code variables:\ni_lsm_76_8274(29365)\n_8282(29403)\nSCALARS:\nUSES:\ni_lsm_76_8274(29365)\n_8282(29403)\nVIRTUAL:\nUSES:\n_MEM_8401(29847)\nDEFS:\n_MEM_8262(29346)\nOVERS:\n_MEM_8239(29277)\n"];
51[color=red,shape=box,label="astar_28877_29371 - STORE\nif(1u) (*((TARGET_INDEX*)(_8297))) = current_lsm_77_8275;\n\nsource code variables:\ncurrent_lsm_77_8275(29326)\n_8297(29462)\nSCALARS:\nUSES:\ncurrent_lsm_77_8275(29326)\n_8297(29462)\nVIRTUAL:\nDEFS:\n_MEM_8263(29347)\n"];
52[color=red,shape=box,label="astar_28877_29374 - STORE\nif(1u) (*((TARGET_TYPE*)(_8295))) = 0u;\n\nsource code variables:\n_8295(29454)\nSCALARS:\nUSES:\n_8295(29454)\nVIRTUAL:\nDEFS:\n_MEM_8264(29348)\nOVERS:\n_MEM_8243(29288)\n"];
53[label="astar_28877_29831 - gimple_return\nreturn ;\n\n"];
23->48 [color=green4,label="_8260, _8273"];
48->23 [color=lawngreen,label=""];
25->24 [color=lawngreen,label=""];
26->25 [color=lawngreen,label=""];
27->24 [color=lawngreen,label=""];
27->26 [color=lawngreen,label=""];
28->26 [color=lawngreen,label=""];
28->45 [color=lawngreen,label=""];
30->29 [color=lawngreen,label=""];
31->27 [color=lawngreen,label=""];
31->29 [color=lawngreen,label=""];
32->30 [color=lawngreen,label=""];
32->31 [color=lawngreen,label=""];
33->28 [color=lawngreen,label=""];
33->32 [color=lawngreen,label=""];
34->33 [color=lawngreen,label=""];
35->34 [color=lawngreen,label=""];
36->35 [color=lawngreen,label=""];
37->36 [color=lawngreen,label=""];
38->33 [color=lawngreen,label=""];
39->38 [color=lawngreen,label=""];
45->33 [color=green4,label="current_lsm_77_8259"];
47->23 [color=lawngreen,label=""];
49->47 [color=lawngreen,label=""];
16->18 [color=green4,label="_MEM_8243"];
16->42 [color=green4,label="_MEM_8243"];
16->52 [color=green4,label="_MEM_8243"];
21->40 [color=green4,label="_MEM_8239"];
21->50 [color=green4,label="_MEM_8239"];
24->37 [color=green4,label="_MEM_8242, _MEM_8249"];
24->46 [color=lawngreen,label=""];
29->37 [color=green4,label="_MEM_8249"];
29->46 [color=lawngreen,label=""];
37->50 [color=green4,label="_MEM_8262"];
37->51 [color=green4,label="_MEM_8263"];
37->52 [color=green4,label="_MEM_8264"];
46->37 [color=green4,label="_MEM_8249"];
}
