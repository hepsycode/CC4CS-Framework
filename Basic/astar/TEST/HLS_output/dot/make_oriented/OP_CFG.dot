digraph G {
0[color=blue,shape=Msquare,label="ENTRY - ENTRY"];
1[color=blue,shape=Msquare,label="EXIT - EXIT"];
2[color=burlywood,shape=box,label="make_oriented_28870_29605 - addr_expr\n_8334 = (&(i));\n"];
3[color=red,shape=box,label="make_oriented_28870_28926 - STORE\nif(1u) (*((TARGET_INDEX*)(_8334))) = 0u;\n"];
4[color=burlywood,shape=box,label="make_oriented_28870_29608 - addr_expr\n_8335 = a2;\n"];
5[color=burlywood,shape=box,label="make_oriented_28870_28927 - nop_expr\nivtmp_54_8157 = (unsigned int) (_8335);\n"];
6[color=burlywood,shape=box,label="make_oriented_28870_29697 - addr_expr\n_8360 = (&(j));\n"];
7[label="make_oriented_28870_28941 - gimple_phi\n/* ivtmp_47_8160 = gimple_phi(<0u, BB2>, <ivtmp_40_8161, BB8>) */\n"];
8[label="make_oriented_28870_28942 - gimple_phi\n/* ivtmp_54_8162 = gimple_phi(<ivtmp_54_8157, BB2>, <ivtmp_54_8163, BB8>) */\n"];
9[label="make_oriented_28870_29878 - gimple_phi\n/* _MEM_8416 = gimple_phi(<_MEM_8415, BB2>, <_MEM_8417, BB8>) */\n"];
10[label="make_oriented_28870_29884 - gimple_phi\n/* _MEM_8419 = gimple_phi(<_MEM_8418, BB2>, <_MEM_8420, BB8>) */\n"];
11[color=burlywood,shape=box,label="make_oriented_28870_29826 - extract_bit_expr\n_8394 = (_Bool)(((unsigned long long int)(ivtmp_47_8160) >> 0LLU) & 1);\n"];
12[color=burlywood,shape=box,label="make_oriented_28870_28944 - cond_expr\n_8165 = _8394 ? 3u : 0u;\n"];
13[color=burlywood,shape=box,label="make_oriented_28870_29622 - pointer_plus_expr\n_8339 = (char*)(((unsigned char*)_8335) + _8165);\n"];
14[color=red,shape=box,label="make_oriented_28870_28945 - STORE\nif(1u) (*((char*)(_8339))) = -1;\n"];
15[color=burlywood,shape=box,label="make_oriented_28870_29744 - bit_and_expr\n_8373 = ivtmp_47_8160 & (1u);\n"];
16[color=burlywood,shape=box,label="make_oriented_28870_29629 - bit_ior_concat_expr\n_8341 = 2u | (_8373 & ((1ULL<<1u)-1));\n"];
17[color=burlywood,shape=box,label="make_oriented_28870_29635 - pointer_plus_expr\n_8343 = (char*)(((unsigned char*)_8335) + _8341);\n"];
18[color=red,shape=box,label="make_oriented_28870_28946 - STORE\nif(1u) (*((char*)(_8343))) = -1;\n"];
19[color=burlywood,shape=box,label="make_oriented_28870_29679 - nop_expr\n_8355 = (unsigned long) (ivtmp_47_8160);\n"];
20[color=burlywood,shape=box,label="make_oriented_28870_29784 - bit_and_expr\n_8382 = _8355 & (1u);\n"];
21[color=burlywood,shape=box,label="make_oriented_28870_29657 - nop_expr\n_8348 = (unsigned long) (ivtmp_47_8160);\n"];
22[color=burlywood,shape=box,label="make_oriented_28870_29772 - bit_and_expr\n_8378 = _8348 & (1u);\n"];
23[color=burlywood,shape=box,label="make_oriented_28870_29788 - rshift_expr\n_8383 = ivtmp_54_8162 >> (1u);\n"];
24[color=burlywood,shape=box,label="make_oriented_28870_29791 - plus_expr\n_8384 = (unsigned int)(_8383 + (1u));\n"];
25[color=burlywood,shape=box,label="make_oriented_28870_29794 - lshift_expr\n_8385 = _8384 << (1u);\n"];
26[color=burlywood,shape=box,label="make_oriented_28870_29797 - bit_and_expr\n_8386 = ivtmp_54_8162 & (1u);\n"];
27[color=burlywood,shape=box,label="make_oriented_28870_29006 - bit_ior_concat_expr\nivtmp_54_8163 = _8385 | (_8386 & ((1ULL<<1u)-1));\n"];
28[color=burlywood,shape=box,label="make_oriented_28870_29714 - ne_expr\n_8366 = ivtmp_47_8160 != (1u);\n"];
29[label="make_oriented_28870_29000 - gimple_phi\n/* ivtmp_40_8161 = gimple_phi(<0u, BB3>, <1u, BB8>) */\n"];
30[label="make_oriented_28870_28969 - gimple_phi\n/* ivtmp_43_8172 = gimple_phi(<ivtmp_54_8162, BB3>, <ivtmp_43_8173, BB8>) */\n"];
31[label="make_oriented_28870_29860 - gimple_phi\n/* _MEM_8407 = gimple_phi(<_MEM_8406, BB3>, <_MEM_8408, BB8>) */\n"];
32[label="make_oriented_28870_29866 - gimple_phi\n/* _MEM_8410 = gimple_phi(<_MEM_8409, BB3>, <_MEM_8411, BB8>) */\n"];
33[label="make_oriented_28870_29872 - gimple_phi\n/* _MEM_8413 = gimple_phi(<_MEM_8412, BB3>, <_MEM_8414, BB8>) */\n"];
34[label="make_oriented_28870_29880 - gimple_phi\n/* _MEM_8417 = gimple_phi(<_MEM_8166, BB3>, <_MEM_8417, BB8>) */\n"];
35[label="make_oriented_28870_29886 - gimple_phi\n/* _MEM_8420 = gimple_phi(<_MEM_8169, BB3>, <_MEM_8420, BB8>) */\n"];
36[color=burlywood,shape=box,label="make_oriented_28870_28965 - nop_expr\n_8174 = (void*) (ivtmp_43_8172);\n"];
37[color=green,shape=box,label="make_oriented_28870_28991 - LOAD\nif(1u) _8175 = (*((char*)(_8174)));\n"];
38[color=burlywood,shape=box,label="make_oriented_28870_29822 - extract_bit_expr\n_8393 = (_Bool)(((unsigned long long int)(ivtmp_40_8161) >> 0LLU) & 1);\n"];
39[color=burlywood,shape=box,label="make_oriented_28870_29758 - truth_xor_expr\n_8374 = _8394 ^ _8393;\n"];
40[color=burlywood,shape=box,label="make_oriented_28870_29023 - lt_expr\n_8179 = _8175 < (-1);\n"];
41[color=burlywood,shape=box,label="make_oriented_28870_29024 - bit_and_expr\n_8180 = _8179 & _8374;\n"];
42[color=burlywood,shape=box,label="make_oriented_28870_29676 - lshift_expr\n_8354 = (unsigned long)(ivtmp_40_8161) << (1u);\n"];
43[color=burlywood,shape=box,label="make_oriented_28870_29776 - rshift_expr\n_8379 = _8354 >> (1u);\n"];
44[color=burlywood,shape=box,label="make_oriented_28870_29781 - lshift_expr\n_8381 = _8379 << (1u);\n"];
45[color=burlywood,shape=box,label="make_oriented_28870_29682 - bit_ior_concat_expr\n_8356 = _8381 | (_8382 & ((1ULL<<1u)-1));\n"];
46[color=burlywood,shape=box,label="make_oriented_28870_29688 - pointer_plus_expr\n_8358 = (char*)(((unsigned char*)_8335) + _8356);\n"];
47[color=burlywood,shape=box,label="make_oriented_28870_28987 - nop_expr\n_8181 = (unsigned char) (_8175);\n"];
48[color=burlywood,shape=box,label="make_oriented_28870_28980 - negate_expr\n_8182 =  -(_8181);\n"];
49[color=burlywood,shape=box,label="make_oriented_28870_28976 - nop_expr\n_8183 = (char) (_8182);\n"];
50[color=burlywood,shape=box,label="make_oriented_28870_29660 - bit_ior_concat_expr\n_8349 = _8381 | (_8378 & ((1ULL<<1u)-1));\n"];
51[color=burlywood,shape=box,label="make_oriented_28870_29666 - pointer_plus_expr\n_8351 = (char*)(((unsigned char*)_8335) + _8349);\n"];
52[color=burlywood,shape=box,label="make_oriented_28870_28973 - plus_expr\nivtmp_43_8173 = (unsigned int)(ivtmp_43_8172 + (1u));\n"];
53[color=burlywood,shape=box,label="make_oriented_28870_29712 - ne_expr\n_8365 = ivtmp_40_8161 != (1u);\n"];
54[color=burlywood,shape=box,label="make_oriented_28870_29835 - truth_not_expr\n_8395 =  !(_8365);\n"];
55[color=burlywood,shape=box,label="make_oriented_28870_29838 - truth_and_expr\n_8396 = _8366 && _8395;\n"];
56[color=red,shape=diamond,label="make_oriented_28870_29025 - READ_COND\nif (_8180)\n"];
57[color=red,shape=box,label="make_oriented_28870_28959 - STORE\nif(1u) (*((char*)(_8174))) = _8183;\n"];
58[color=green,shape=box,label="make_oriented_28870_29041 - LOAD\nif(1u) _8184 = (*((char*)(_8358)));\n"];
59[color=red,shape=box,label="make_oriented_28870_28953 - STORE\nif(1u) (*((char*)(_8351))) = -1;\n"];
60[label="make_oriented_28870_29862 - gimple_phi\n/* _MEM_8408 = gimple_phi(<_MEM_8167, BB5>, <_MEM_8407, BB6>, <_MEM_8407, BB7>) */\n"];
61[color=burlywood,shape=box,label="make_oriented_28870_29673 - ge_expr\n_8353 = _8184 >= (0);\n"];
62[color=red,shape=diamond,label="make_oriented_28870_29042 - READ_COND\nif (_8353)\n"];
63[color=red,shape=box,label="make_oriented_28870_28993 - STORE\nif(1u) (*((char*)(_8174))) = -1;\n"];
64[label="make_oriented_28870_29868 - gimple_phi\n/* _MEM_8411 = gimple_phi(<_MEM_8410, BB5>, <_MEM_8410, BB6>, <_MEM_8170, BB7>) */\n"];
65[label="make_oriented_28870_29874 - gimple_phi\n/* _MEM_8414 = gimple_phi(<_MEM_8168, BB5>, <_MEM_8413, BB6>, <_MEM_8413, BB7>) */\n"];
66[label="make_oriented_28870_29832 - MULTI_READ_COND\nif (_8365 /* else if(_8396)*/)\n"];
67[color=red,shape=box,label="make_oriented_28870_29052 - STORE\nif(1u) (*((TARGET_INDEX*)(_8360))) = 2u;\n"];
68[color=red,shape=box,label="make_oriented_28870_29053 - STORE\nif(1u) (*((TARGET_INDEX*)(_8334))) = 2u;\n"];
69[label="make_oriented_28870_29054 - gimple_return\nreturn ;\n"];
0->2 [fontcolor=red3,label=""];
2->3 [fontcolor=red3,label=""];
3->4 [fontcolor=red3,label=""];
4->5 [fontcolor=red3,label=""];
5->6 [fontcolor=red3,label=""];
6->7 [fontcolor=red3,label=""];
7->8 [fontcolor=red3,label=""];
8->9 [fontcolor=red3,label=""];
9->10 [fontcolor=red3,label=""];
10->11 [fontcolor=red3,label=""];
11->12 [fontcolor=red3,label=""];
12->13 [fontcolor=red3,label=""];
13->14 [fontcolor=red3,label=""];
14->15 [fontcolor=red3,label=""];
15->16 [fontcolor=red3,label=""];
16->17 [fontcolor=red3,label=""];
17->18 [fontcolor=red3,label=""];
18->19 [fontcolor=red3,label=""];
19->20 [fontcolor=red3,label=""];
20->21 [fontcolor=red3,label=""];
21->22 [fontcolor=red3,label=""];
22->23 [fontcolor=red3,label=""];
23->24 [fontcolor=red3,label=""];
24->25 [fontcolor=red3,label=""];
25->26 [fontcolor=red3,label=""];
26->27 [fontcolor=red3,label=""];
27->28 [fontcolor=red3,label=""];
28->29 [fontcolor=red3,label=""];
29->30 [fontcolor=red3,label=""];
30->31 [fontcolor=red3,label=""];
31->32 [fontcolor=red3,label=""];
32->33 [fontcolor=red3,label=""];
33->34 [fontcolor=red3,label=""];
34->35 [fontcolor=red3,label=""];
35->36 [fontcolor=red3,label=""];
36->37 [fontcolor=red3,label=""];
37->38 [fontcolor=red3,label=""];
38->39 [fontcolor=red3,label=""];
39->40 [fontcolor=red3,label=""];
40->41 [fontcolor=red3,label=""];
41->42 [fontcolor=red3,label=""];
42->43 [fontcolor=red3,label=""];
43->44 [fontcolor=red3,label=""];
44->45 [fontcolor=red3,label=""];
45->46 [fontcolor=red3,label=""];
46->47 [fontcolor=red3,label=""];
47->48 [fontcolor=red3,label=""];
48->49 [fontcolor=red3,label=""];
49->50 [fontcolor=red3,label=""];
50->51 [fontcolor=red3,label=""];
51->52 [fontcolor=red3,label=""];
52->53 [fontcolor=red3,label=""];
53->54 [fontcolor=red3,label=""];
54->55 [fontcolor=red3,label=""];
55->56 [fontcolor=red3,label=""];
56->57 [fontcolor=red3,label="T"];
56->58 [fontcolor=red3,label="F"];
57->59 [fontcolor=red3,label=""];
59->60 [fontcolor=red3,label=""];
58->61 [fontcolor=red3,label=""];
61->62 [fontcolor=red3,label=""];
62->63 [fontcolor=red3,label="T"];
62->60 [fontcolor=red3,label="F"];
63->60 [fontcolor=red3,label=""];
60->64 [fontcolor=red3,label=""];
64->65 [fontcolor=red3,label=""];
65->66 [fontcolor=red3,label=""];
66->67 [fontcolor=red3,label=""];
67->68 [fontcolor=red3,label=""];
68->69 [fontcolor=red3,label=""];
69->1 [fontcolor=red3,label=""];
}
